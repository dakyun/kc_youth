plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.johnrengelman.processes' version '0.5.0'
    id 'de.undercouch.download' version '4.1.2'
}

group = 'com.kc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JSP 설정
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'

    // 자바 프로그램과 MSSQL을 연동해주는 커넥터
    implementation 'com.microsoft.sqlserver:mssql-jdbc:9.4.1.jre8'

    // 마이바티스 라이브러리
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    // 입력값 검증 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // 스프링 시큐리티 모듈
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Sass 컴파일 태스크 추가
//task compileSass(type: Exec) {
//    def sassExecutable = 'node_modules/.bin/sass'
//    inputs.dir 'src/main/resources/static/assets/scss'
//    outputs.dir 'src/main/resources/static/assets/css'
//    commandLine sassExecutable, 'src/main/resources/static/assets/scss:src/main/resources/static/assets/css'
//}
